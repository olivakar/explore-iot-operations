apiVersion: v1
kind: Secret
metadata:
  name: mssql-secret
type: Opaque
data:
  SA_PASSWORD: WW91clN0cm9uZ1Bhc3N3b3JkMTIzIQ==  # This is the base64 encoded version of 'YourStrongPassword123!'
  APP_USER: c2FtcGxldXNlcg==  # This is the base64 encoded version of 'sampleuser'
  APP_PASSWORD: TmV3Q29tcGxleFBAc3N3MHJkMTIzJA==  # This is the base64 encoded version of 'NewComplexP@ssw0rd123$'
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mssql-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  template:
    metadata:
      labels:
        app: mssql
    spec:
      containers:
      - name: mssql
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
        - containerPort: 1433
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: SA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mssql-secret
              key: SA_PASSWORD
        - name: APP_USER
          valueFrom:
            secretKeyRef:
              name: mssql-secret
              key: APP_USER
        - name: APP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mssql-secret
              key: APP_PASSWORD
        volumeMounts:
        - name: mssqldb
          mountPath: /var/opt/mssql
        - name: mssql-config-init
          mountPath: /usr/config
        command: ["/bin/bash", "/usr/config/init.sh"]
      volumes:
      - name: mssqldb
        persistentVolumeClaim:
          claimName: mssql-data
      - name: mssql-config-init
        configMap:
          name: mssql-config-init
---
apiVersion: v1
kind: Service
metadata:
  name: sqlserver-service
spec:
  selector:
    app: mssql
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
  type: ClusterIP
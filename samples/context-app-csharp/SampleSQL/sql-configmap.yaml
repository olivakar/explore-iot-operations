apiVersion: v1
kind: ConfigMap
metadata:
  name: mssql-config
data:
  setup.sql: |
    PRINT 'Starting setup script';
    USE [master];
    GO
    IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'MySampleDB')
    BEGIN
        CREATE DATABASE MySampleDB;
        PRINT 'Created MySampleDB database';
    END
    ELSE
    BEGIN
        PRINT 'MySampleDB database already exists';
    END
    GO
    USE MySampleDB;
    PRINT 'Switched to MySampleDB database';
    GO
    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'CountryMeasurements')
    BEGIN
        CREATE TABLE CountryMeasurements (
            ID INT PRIMARY KEY IDENTITY(1,1),
            Country CHAR(2),
            Viscosity DECIMAL(3,2),
            Sweetness DECIMAL(3,2),
            ParticleSize DECIMAL(3,2),
            Overall DECIMAL(3,2)
        );
        INSERT INTO CountryMeasurements (Country, Viscosity, Sweetness, ParticleSize, Overall)
        VALUES
            ('us', 0.50, 0.80, 0.70, 0.40),
            ('fr', 0.60, 0.85, 0.75, 0.45),
            ('jp', 0.53, 0.83, 0.73, 0.43),
            ('uk', 0.51, 0.81, 0.71, 0.41);
        PRINT 'Created and populated CountryMeasurements table';
    END
    ELSE
    BEGIN
        PRINT 'CountryMeasurements table already exists';
    END
    GO
    USE [master];
    PRINT 'Switched to master database';
    GO
    PRINT 'Attempting to create or modify login for $(APP_USER)';
    IF NOT EXISTS (SELECT * FROM sys.server_principals WHERE name = '$(APP_USER)')
    BEGIN
        CREATE LOGIN [$(APP_USER)] WITH PASSWORD = '$(APP_PASSWORD)', DEFAULT_DATABASE = [MySampleDB];
        PRINT 'Created login for $(APP_USER) with default database MySampleDB';
    END
    ELSE
    BEGIN
        ALTER LOGIN [$(APP_USER)] WITH DEFAULT_DATABASE = [MySampleDB];
        PRINT 'Modified login for $(APP_USER) to set default database to MySampleDB';
    END
    GO
    PRINT 'Granting CONNECT SQL to $(APP_USER)';
    GRANT CONNECT SQL TO [$(APP_USER)];
    GO
    USE [MySampleDB];
    PRINT 'Switched to MySampleDB database for user creation/modification';
    GO
    PRINT 'Attempting to create or modify user for $(APP_USER)';
    IF NOT EXISTS (SELECT * FROM sys.database_principals WHERE name = '$(APP_USER)')
    BEGIN
        CREATE USER [$(APP_USER)] FOR LOGIN [$(APP_USER)];
        ALTER ROLE db_owner ADD MEMBER [$(APP_USER)];
        PRINT 'Created user for $(APP_USER) and added to db_owner role';
    END
    ELSE
    BEGIN
        PRINT 'User for $(APP_USER) already exists, ensuring db_owner role membership';
        IF IS_ROLEMEMBER('db_owner', '$(APP_USER)') = 0
        BEGIN
            ALTER ROLE db_owner ADD MEMBER [$(APP_USER)];
            PRINT 'Added $(APP_USER) to db_owner role';
        END
        ELSE
        BEGIN
            PRINT '$(APP_USER) is already a member of db_owner role';
        END
    END
    GO
    PRINT 'Verifying $(APP_USER) permissions:';
    EXEC sp_helprotect @username = '$(APP_USER)';
    GO
    PRINT 'Setup script completed';
  mssql.conf: |
    [network]
    forceencryption = 0
    trustservercertificate = 1
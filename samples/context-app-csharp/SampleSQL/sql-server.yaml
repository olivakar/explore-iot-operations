apiVersion: v1
kind: Secret
metadata:
  name: mssql-secret
type: Opaque
data:
  SA_PASSWORD: WW91clN0cm9uZ1Bhc3N3b3JkMTIzIQ==  # Base64 encoded "YourStrongPassword123!"
  APP_USER: c2FtcGxldXNlcg==                    # Base64 encoded "sampleuser"
  APP_PASSWORD: c2FtcGxlcGFzc3dvcmQ=            # Base64 encoded "samplepassword"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mssql-config
data:
  setup.sql: |
    IF NOT EXISTS (SELECT * FROM sys.databases WHERE name = 'MySampleDB')
    BEGIN
        CREATE DATABASE MySampleDB;
    END
    GO
    
    USE MySampleDB;
    GO
    
    IF NOT EXISTS (SELECT * FROM sys.tables WHERE name = 'CountryMeasurements')
    BEGIN
        CREATE TABLE CountryMeasurements (
            ID INT PRIMARY KEY IDENTITY(1,1),
            Country CHAR(2),
            Viscosity DECIMAL(3,2),
            Sweetness DECIMAL(3,2),
            ParticleSize DECIMAL(3,2),
            Overall DECIMAL(3,2)
        );
        
        INSERT INTO CountryMeasurements (Country, Viscosity, Sweetness, ParticleSize, Overall)
        VALUES 
            ('us', 0.50, 0.80, 0.70, 0.40),
            ('fr', 0.60, 0.85, 0.75, 0.45),
            ('jp', 0.53, 0.83, 0.73, 0.43),
            ('uk', 0.51, 0.81, 0.71, 0.41);
    END
    GO
    
    IF NOT EXISTS (SELECT * FROM sys.database_principals WHERE name = N'$(APP_USER)')
    BEGIN
        CREATE LOGIN [$(APP_USER)] WITH PASSWORD = N'$(APP_PASSWORD)';
        CREATE USER [$(APP_USER)] FOR LOGIN [$(APP_USER)];
        ALTER ROLE db_datareader ADD MEMBER [$(APP_USER)];
        ALTER ROLE db_datawriter ADD MEMBER [$(APP_USER)];
    END
    GO

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mssql-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  template:
    metadata:
      labels:
        app: mssql
    spec:
      containers:
      - name: mssql
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
        - containerPort: 1433
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: SA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mssql-secret
              key: SA_PASSWORD
        - name: APP_USER
          valueFrom:
            secretKeyRef:
              name: mssql-secret
              key: APP_USER
        - name: APP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mssql-secret
              key: APP_PASSWORD
        volumeMounts:
        - name: mssqldb
          mountPath: /var/opt/mssql
        - name: mssql-config
          mountPath: /usr/config
        command: ["/bin/bash"]
        args: 
        - "-c"
        - |
          /opt/mssql/bin/sqlservr &
          pid=$!
          sleep 60
          /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P $SA_PASSWORD -d master -v APP_USER=$APP_USER,APP_PASSWORD=$APP_PASSWORD -i /usr/config/setup.sql
          wait $pid
      volumes:
      - name: mssqldb
        persistentVolumeClaim:
          claimName: mssql-data
      - name: mssql-config
        configMap:
          name: mssql-config
---
apiVersion: v1
kind: Service
metadata:
  name: sqlserver-service
spec:
  selector:
    app: mssql
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
  type: ClusterIP
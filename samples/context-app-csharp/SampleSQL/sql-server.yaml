apiVersion: v1
kind: Secret
metadata:
  name: mssql-secret
type: Opaque
data:
  SA_PASSWORD: WW91clN0cm9uZ1Bhc3N3b3JkMTIzIQ==  # This is the base64 encoded version of 'YourStrongPassword123!'
  APP_USER: c2FtcGxldXNlcg==  # This is the base64 encoded version of 'sampleuser'
  APP_PASSWORD: TmV3Q29tcGxleFBAc3N3MHJkMTIzJA==  # This is the base64 encoded version of 'NewComplexP@ssw0rd123$'
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mssql-data
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mssql-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mssql
  template:
    metadata:
      labels:
        app: mssql
    spec:
      containers:
      - name: mssql
        image: mcr.microsoft.com/mssql/server:2019-latest
        ports:
        - containerPort: 1433
        env:
        - name: ACCEPT_EULA
          value: "Y"
        - name: SA_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mssql-secret
              key: SA_PASSWORD
        volumeMounts:
        - name: mssqldb
          mountPath: /var/opt/mssql
        - name: mssql-config
          mountPath: /usr/config
        command: ["/bin/bash"]
        args: 
        - "-c"
        - |
          cp /usr/config/mssql.conf /var/opt/mssql/mssql.conf
          /opt/mssql/bin/sqlservr &
          pid=$!
          sleep 60
          /opt/mssql-tools18/bin/sqlcmd -S localhost -U sa -P $SA_PASSWORD -d master -i /usr/config/setup.sql -C
          if [ $? -ne 0 ]; then
            echo "Setup script failed"
            exit 1
          fi
          wait $pid
      volumes:
      - name: mssqldb
        persistentVolumeClaim:
          claimName: mssql-data
      - name: mssql-config
        configMap:
          name: mssql-config
---
apiVersion: v1
kind: Service
metadata:
  name: sqlserver-service
spec:
  selector:
    app: mssql
  ports:
    - protocol: TCP
      port: 1433
      targetPort: 1433
  type: ClusterIP